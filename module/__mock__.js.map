{"version":3,"file":"__mock__.js","sourceRoot":"","sources":["../../../src/module/__mock__.ts"],"names":[],"mappings":";;AAAA,+BAA+B;AAG/B,MAAM,OAAO,GAAG,IAAI,cAAO,EAAO,CAAC;AACnC,MAAM,OAAO,GAAG,IAAI,cAAO,EAAO,CAAC;AAEtB,QAAA,WAAW,GAAG,GAAG,EAAE;IAC9B,MAAM,OAAO,GAAG,IAAI,cAAO,EAAiB,CAAC;IAC7C,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO;YAAE,OAAO;QAClC,OAAO,CAAC,IAAI,CAAC;YACX,KAAK;YACL,WAAW,EAAE,CAAC,CAAC,EAAE;gBACf,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;YAC5C,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEW,QAAA,WAAW,GAAG,GAAG,EAAE;IAC9B,MAAM,OAAO,GAAG,IAAI,cAAO,EAAc,CAAC;IAC1C,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO;YAAE,OAAO;QAClC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,CAAC,KAAiB,EAAE,EAAE;QACjC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAChD,CAAC,CAAC;IACF,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC3B,CAAC,CAAC","sourcesContent":["import { Subject } from \"rxjs\";\nimport { ExposerObject } from \"../main\";\n\nconst socketA = new Subject<any>();\nconst socketB = new Subject<any>();\n\nexport const mockExposer = () => {\n  const subject = new Subject<ExposerObject>();\n  socketA.subscribe(data => {\n    const value = data.value;\n    if (data.type !== \"airpc\") return;\n    subject.next({\n      value,\n      postMessage: v => {\n        socketB.next({ type: \"airpc\", value: v });\n      }\n    });\n  });\n  return subject;\n};\n\nexport const mockWrapper = () => {\n  const subject = new Subject<Uint8Array>();\n  socketB.subscribe(data => {\n    const value = data.value;\n    if (data.type !== \"airpc\") return;\n    subject.next(value);\n  });\n  const post = (uint8: Uint8Array) => {\n    socketA.next({ type: \"airpc\", value: uint8 });\n  };\n  return { subject, post };\n};\n"]}