{"version":3,"file":"action.js","sourceRoot":"","sources":["../../../src/typings/action.ts"],"names":[],"mappings":"","sourcesContent":["export type ActionCreator<T, B> = {\n  [K in keyof T]: T[K] extends (...args: infer U) => infer R\n    ? Include<R, B, U>\n    : never;\n};\n\ntype Include<A, B, U extends any[]> = B extends A\n  ? (...args: U) => { type: string; args: U }\n  : never;\n\nexport type ValidState<A, B> = B extends A ? B : never;\n"]}