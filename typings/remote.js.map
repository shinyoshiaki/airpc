{"version":3,"file":"remote.js","sourceRoot":"","sources":["../../../src/typings/remote.ts"],"names":[],"mappings":"","sourcesContent":["// prettier-ignore\ntype Promisify<T> =\n  T extends { [\"\"]: boolean }\n    ? Promise<Remote<T>>\n    : T extends (...args: infer R1) => infer R2\n        ? (...args: R1) => Promisify<R2>\n        : Promise<T>;\n\n// prettier-ignore\nexport type Remote<T> =\n  (\n    T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : unknown\n  ) &\n  (\n    T extends { new (...args: infer R1): infer R2 }\n      ? { new (...args: R1): Promise<Remote<R2>> }\n      : unknown\n  ) &\n  (\n    T extends Object\n      ? { [K in keyof T]: Remote<T[K]> }\n      : unknown\n  ) &\n  (\n    T extends string\n      ? Promise<string>\n      : unknown\n  ) &\n  (\n    T extends number\n      ? Promise<number>\n      : unknown\n  ) &\n  (\n    T extends boolean\n      ? Promise<boolean>\n      : unknown\n  )\n"]}