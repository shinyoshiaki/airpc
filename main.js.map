{"version":3,"file":"main.js","sourceRoot":"","sources":["../../src/main.ts"],"names":[],"mappings":";;;AAAA,8CAAkD;AAelD,MAAM,IAAI;IACR,YAAY,MAAW,EAAE,OAAgB,EAAE,OAAgB;QACzD,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1D,IAAI,IAAI,KAAK,aAAa;gBAAE,OAAO;YAElC,IAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAW,EAAE,EAAE,CACvC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACnB,MAAM,QAAQ,GAAG,YAAY,EAAE,CAAC;gBAEhC,MAAM,EAAE,GAAG,OAAO,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC;gBAEnE,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC9B,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,gBAAM,CAAC,GAAG,CAAQ,CAAC;oBAC9C,IAAI,QAAQ,KAAK,IAAI,EAAE;wBACrB,IAAI,EAAE;4BAAE,YAAY,CAAC,EAAE,CAAC,CAAC;wBACzB,CAAC,CAAC,QAAQ,CAAC,CAAC;qBACb;gBACH,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,IAAI,CAAC,gBAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,SAAgB,IAAI,CAClB,MAAmC,EACnC,OAAgB,EAChB,OAAgB;IAEhB,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAQ,CAAC;AACnD,CAAC;AAND,oBAMC;AAED,SAAgB,MAAM,CAAC,QAAa,EAAE,OAAgB;IACpD,OAAO,CAAC,SAAS,CAAC,CAAM,CAAC,EAAC,EAAE;QAC1B,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QACjC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,gBAAM,CAAC,KAAK,CAAQ,CAAC;QAClD,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;YAClB,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAC/C,WAAW,CAAC,gBAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;SACzC;IACH,CAAC,CAAA,CAAC,CAAC;AACL,CAAC;AATD,wBASC;AAED,SAAS,YAAY;IACnB,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;SAChB,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC3E,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC","sourcesContent":["import { decode, encode } from \"@msgpack/msgpack\";\n\nimport { Remote } from \"./typings/remote\";\nimport { Subject } from \"rxjs\";\n\nexport type Wrapper = {\n  subject: Subject<Uint8Array>;\n  post: (v: Uint8Array) => void;\n};\nexport type Exposer = Subject<ExposerObject>;\nexport type ExposerObject = {\n  postMessage: (v: Uint8Array) => void;\n  value: Uint8Array;\n};\n\nclass Wrap {\n  constructor(target: any, wrapper: Wrapper, timeout?: number) {\n    Object.getOwnPropertyNames(target.prototype).forEach(type => {\n      if (type === \"constructor\") return;\n\n      (this as any)[type] = (...args: any[]) =>\n        new Promise((r, f) => {\n          const parentId = generateUUID();\n\n          const id = timeout && setTimeout(() => f(\"wrap timeout\"), timeout);\n\n          wrapper.subject.subscribe(res => {\n            const { uuid, response } = decode(res) as any;\n            if (parentId === uuid) {\n              if (id) clearTimeout(id);\n              r(response);\n            }\n          });\n\n          wrapper.post(encode({ type, args, uuid: parentId }));\n        });\n    });\n  }\n}\n\nexport function wrap<T>(\n  target: { new (...args: any[]): T },\n  wrapper: Wrapper,\n  timeout?: number\n): Remote<T> {\n  return new Wrap(target, wrapper, timeout) as any;\n}\n\nexport function expose(instance: any, exposer: Exposer) {\n  exposer.subscribe(async v => {\n    const { postMessage, value } = v;\n    const { type, args, uuid } = decode(value) as any;\n    if (instance[type]) {\n      const response = await instance[type](...args);\n      postMessage(encode({ uuid, response }));\n    }\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n"]}